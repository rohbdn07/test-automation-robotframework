name: Robot Framework Tests

on:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout code
        uses: actions/checkout@v2

      # Step 2: Set up Python environment
      - name: Set up Python 3.12
        uses: actions/setup-python@v2
        with:
          python-version: 3.12

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install allure-robotframework
          pip install -r requirements.txt

      # Step 4: Run Robot Framework tests
      - name: Run Robot Framework tests
        run: |
          robot --outputdir allure-results tests/

      # Step 5: Generate Nive report using Allure Report
      # - name: Generate Allure Report
      #   run: |
      #     allure generate allure-results --clean -o allure-report

      - name: Upload Allure Report
        uses: simple-elf/allure-report-action@v1.7
        with:
          gh_pages: gh-pages
          allure_results: allure-results
          github_token: ${{ secrets.GITHUB_TOKEN }}

      #  Upload Allure Report to GitHub Pages
      - name:  Upload Allure Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        if: always()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_branch: gh-pages
          publish_dir: allure-results

      # Step 5: Upload the results as artifacts
      - name: Upload Test Results
        uses: actions/upload-artifact@v4
        with:
          name: robot-test-results
          path: allure-results

      - name: Publish Report to Jira
        # Create the Jira issue
        run: |
          response=$(curl --request POST \
            --url "https://${{ secrets.JIRA_DOMAIN }}/rest/api/3/issue/" \
            --user "${{ secrets.JIRA_USERNAME }}:${{ secrets.JIRA_API_TOKEN }}" \
            --header "Accept: application/json" \
            --header "Content-Type: application/json" \
            --data '{
              "fields": {
                "project": {
                  "key": "TA"
                },
                "summary": "Test Report for Build #${{ github.run_id }}",
                "description": {
                  "content": [
                    {
                      "content": [
                        {
                        "text": "This is for testing. This ticket is created through pipeline",
                        "type": "text"
                        }
                      ],
                      "type": "paragraph"
                    }
                  ],
                  "type": "doc",
                  "version": 1
                },
                "issuetype": {
                  "name": "Task"
                }
              }
            }')
          ISSUE_KEY=$(echo $response | jq -r '.key')
          echo "Created Jira issue with key: $ISSUE_KEY"
          echo "ISSUE_KEY=$ISSUE_KEY" >> $GITHUB_ENV


      - name: Attach test report to Jira issue
        # Attach test report to existing Jira issue
        run: |
          FILE_PATH="allure-results/report.html"
          ISSUE_KEY="TA-1"
          if [ -f "$FILE_PATH" ]; then
            echo "Report file exists, proceeding to attach it to Jira."
            curl --request POST --url 'https://${{ secrets.JIRA_DOMAIN }}/rest/api/3/issue/${{ env.ISSUE_KEY }}/attachments' \
              -u "${{ secrets.JIRA_USERNAME }}:${{ secrets.JIRA_API_TOKEN }}" \
              -H "X-Atlassian-Token: no-check" \
              --form "file=@${FILE_PATH}" \
              -F "filename=report.html"
          fi
